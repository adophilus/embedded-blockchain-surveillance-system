name: CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout current repo state
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.10.0

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Load secrets
        uses: Infisical/secrets-action@v1.0.9
        with:
          method: universal
          client-id: ${{ secrets.INFISICAL_CLIENT_ID }}
          client-secret: ${{ secrets.INFISICAL_CLIENT_SECRET }}
          domain: ${{ secrets.INFISICAL_DOMAIN }}
          env-slug: production
          project-slug: embedded-blockchain-surveillance-system
          export-type: env

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prod false

      # - name: Lint codebase
      #   run: pnpm lint

  build:
    needs: quality-checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout current repo state
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.10.0

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Load secrets
        uses: Infisical/secrets-action@v1.0.9
        with:
          method: universal
          client-id: ${{ secrets.INFISICAL_CLIENT_ID }}
          client-secret: ${{ secrets.INFISICAL_CLIENT_SECRET }}
          domain: ${{ secrets.INFISICAL_DOMAIN }}
          env-slug: production
          project-slug: embedded-blockchain-surveillance-system
          export-type: env

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prod false

      # - name: Build stack
      #   run: pnpm build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repo state
        uses: actions/checkout@v4

      - name: Load secrets
        uses: Infisical/secrets-action@v1.0.9
        with:
          method: universal
          client-id: ${{ secrets.INFISICAL_CLIENT_ID }}
          client-secret: ${{ secrets.INFISICAL_CLIENT_SECRET }}
          domain: ${{ secrets.INFISICAL_DOMAIN }}
          env-slug: production
          project-slug: embedded-blockchain-surveillance-system
          export-type: env

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: adophilus
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/backend/Dockerfile
          push: true
          tags: adophilus/embedded-blockchain-surveillance-system:latest
          build-args: |
            VITE_NODE_ENV=${{ env.VITE_NODE_ENV }}
            VITE_SERVER_URL=${{ env.VITE_SERVER_URL }}


