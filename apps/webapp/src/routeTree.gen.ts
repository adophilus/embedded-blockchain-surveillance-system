/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as AdminDashboardRouteImport } from './routes/admin/_dashboard'
import { Route as ElectionIdIndexRouteImport } from './routes/election/$id/index'
import { Route as AdminLoginIndexRouteImport } from './routes/admin/login/index'
import { Route as ElectionIdResultsRouteImport } from './routes/election/$id/results'
import { Route as ElectionIdVoteIndexRouteImport } from './routes/election/$id/vote/index'
import { Route as ElectionIdResultsIndexRouteImport } from './routes/election/$id/results/index'
import { Route as AdminDashboardDashboardIndexRouteImport } from './routes/admin/_dashboard/dashboard/index'
import { Route as AdminDashboardDashboardCreateElectionRouteImport } from './routes/admin/_dashboard/dashboard/create-election'
import { Route as AdminDashboardDashboardElectionsIndexRouteImport } from './routes/admin/_dashboard/dashboard/elections/index'
import { Route as AdminDashboardDashboardElectionsElectionIdDetailsRouteImport } from './routes/admin/_dashboard/dashboard/elections/$electionId/details'

const AdminRouteImport = createFileRoute('/admin')()

const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminDashboardRoute = AdminDashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => AdminRoute,
} as any)
const ElectionIdIndexRoute = ElectionIdIndexRouteImport.update({
  id: '/election/$id/',
  path: '/election/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminLoginIndexRoute = AdminLoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AdminRoute,
} as any)
const ElectionIdResultsRoute = ElectionIdResultsRouteImport.update({
  id: '/election/$id/results',
  path: '/election/$id/results',
  getParentRoute: () => rootRouteImport,
} as any)
const ElectionIdVoteIndexRoute = ElectionIdVoteIndexRouteImport.update({
  id: '/election/$id/vote/',
  path: '/election/$id/vote/',
  getParentRoute: () => rootRouteImport,
} as any)
const ElectionIdResultsIndexRoute = ElectionIdResultsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ElectionIdResultsRoute,
} as any)
const AdminDashboardDashboardIndexRoute =
  AdminDashboardDashboardIndexRouteImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => AdminDashboardRoute,
  } as any)
const AdminDashboardDashboardCreateElectionRoute =
  AdminDashboardDashboardCreateElectionRouteImport.update({
    id: '/dashboard/create-election',
    path: '/dashboard/create-election',
    getParentRoute: () => AdminDashboardRoute,
  } as any)
const AdminDashboardDashboardElectionsIndexRoute =
  AdminDashboardDashboardElectionsIndexRouteImport.update({
    id: '/dashboard/elections/',
    path: '/dashboard/elections/',
    getParentRoute: () => AdminDashboardRoute,
  } as any)
const AdminDashboardDashboardElectionsElectionIdDetailsRoute =
  AdminDashboardDashboardElectionsElectionIdDetailsRouteImport.update({
    id: '/dashboard/elections/$electionId/details',
    path: '/dashboard/elections/$electionId/details',
    getParentRoute: () => AdminDashboardRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminDashboardRouteWithChildren
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/login': typeof LoginIndexRoute
  '/election/$id/results': typeof ElectionIdResultsRouteWithChildren
  '/admin/login': typeof AdminLoginIndexRoute
  '/election/$id': typeof ElectionIdIndexRoute
  '/admin/dashboard/create-election': typeof AdminDashboardDashboardCreateElectionRoute
  '/admin/dashboard': typeof AdminDashboardDashboardIndexRoute
  '/election/$id/results/': typeof ElectionIdResultsIndexRoute
  '/election/$id/vote': typeof ElectionIdVoteIndexRoute
  '/admin/dashboard/elections': typeof AdminDashboardDashboardElectionsIndexRoute
  '/admin/dashboard/elections/$electionId/details': typeof AdminDashboardDashboardElectionsElectionIdDetailsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminDashboardRouteWithChildren
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/login': typeof LoginIndexRoute
  '/admin/login': typeof AdminLoginIndexRoute
  '/election/$id': typeof ElectionIdIndexRoute
  '/admin/dashboard/create-election': typeof AdminDashboardDashboardCreateElectionRoute
  '/admin/dashboard': typeof AdminDashboardDashboardIndexRoute
  '/election/$id/results': typeof ElectionIdResultsIndexRoute
  '/election/$id/vote': typeof ElectionIdVoteIndexRoute
  '/admin/dashboard/elections': typeof AdminDashboardDashboardElectionsIndexRoute
  '/admin/dashboard/elections/$electionId/details': typeof AdminDashboardDashboardElectionsElectionIdDetailsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/admin/_dashboard': typeof AdminDashboardRouteWithChildren
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/login/': typeof LoginIndexRoute
  '/election/$id/results': typeof ElectionIdResultsRouteWithChildren
  '/admin/login/': typeof AdminLoginIndexRoute
  '/election/$id/': typeof ElectionIdIndexRoute
  '/admin/_dashboard/dashboard/create-election': typeof AdminDashboardDashboardCreateElectionRoute
  '/admin/_dashboard/dashboard/': typeof AdminDashboardDashboardIndexRoute
  '/election/$id/results/': typeof ElectionIdResultsIndexRoute
  '/election/$id/vote/': typeof ElectionIdVoteIndexRoute
  '/admin/_dashboard/dashboard/elections/': typeof AdminDashboardDashboardElectionsIndexRoute
  '/admin/_dashboard/dashboard/elections/$electionId/details': typeof AdminDashboardDashboardElectionsElectionIdDetailsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/demo/tanstack-query'
    | '/login'
    | '/election/$id/results'
    | '/admin/login'
    | '/election/$id'
    | '/admin/dashboard/create-election'
    | '/admin/dashboard'
    | '/election/$id/results/'
    | '/election/$id/vote'
    | '/admin/dashboard/elections'
    | '/admin/dashboard/elections/$electionId/details'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/demo/tanstack-query'
    | '/login'
    | '/admin/login'
    | '/election/$id'
    | '/admin/dashboard/create-election'
    | '/admin/dashboard'
    | '/election/$id/results'
    | '/election/$id/vote'
    | '/admin/dashboard/elections'
    | '/admin/dashboard/elections/$electionId/details'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/admin/_dashboard'
    | '/demo/tanstack-query'
    | '/login/'
    | '/election/$id/results'
    | '/admin/login/'
    | '/election/$id/'
    | '/admin/_dashboard/dashboard/create-election'
    | '/admin/_dashboard/dashboard/'
    | '/election/$id/results/'
    | '/election/$id/vote/'
    | '/admin/_dashboard/dashboard/elections/'
    | '/admin/_dashboard/dashboard/elections/$electionId/details'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  LoginIndexRoute: typeof LoginIndexRoute
  ElectionIdResultsRoute: typeof ElectionIdResultsRouteWithChildren
  ElectionIdIndexRoute: typeof ElectionIdIndexRoute
  ElectionIdVoteIndexRoute: typeof ElectionIdVoteIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/_dashboard': {
      id: '/admin/_dashboard'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminDashboardRouteImport
      parentRoute: typeof AdminRoute
    }
    '/election/$id/': {
      id: '/election/$id/'
      path: '/election/$id'
      fullPath: '/election/$id'
      preLoaderRoute: typeof ElectionIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/login/': {
      id: '/admin/login/'
      path: '/login'
      fullPath: '/admin/login'
      preLoaderRoute: typeof AdminLoginIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/election/$id/results': {
      id: '/election/$id/results'
      path: '/election/$id/results'
      fullPath: '/election/$id/results'
      preLoaderRoute: typeof ElectionIdResultsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/election/$id/vote/': {
      id: '/election/$id/vote/'
      path: '/election/$id/vote'
      fullPath: '/election/$id/vote'
      preLoaderRoute: typeof ElectionIdVoteIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/election/$id/results/': {
      id: '/election/$id/results/'
      path: '/'
      fullPath: '/election/$id/results/'
      preLoaderRoute: typeof ElectionIdResultsIndexRouteImport
      parentRoute: typeof ElectionIdResultsRoute
    }
    '/admin/_dashboard/dashboard/': {
      id: '/admin/_dashboard/dashboard/'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardDashboardIndexRouteImport
      parentRoute: typeof AdminDashboardRoute
    }
    '/admin/_dashboard/dashboard/create-election': {
      id: '/admin/_dashboard/dashboard/create-election'
      path: '/dashboard/create-election'
      fullPath: '/admin/dashboard/create-election'
      preLoaderRoute: typeof AdminDashboardDashboardCreateElectionRouteImport
      parentRoute: typeof AdminDashboardRoute
    }
    '/admin/_dashboard/dashboard/elections/': {
      id: '/admin/_dashboard/dashboard/elections/'
      path: '/dashboard/elections'
      fullPath: '/admin/dashboard/elections'
      preLoaderRoute: typeof AdminDashboardDashboardElectionsIndexRouteImport
      parentRoute: typeof AdminDashboardRoute
    }
    '/admin/_dashboard/dashboard/elections/$electionId/details': {
      id: '/admin/_dashboard/dashboard/elections/$electionId/details'
      path: '/dashboard/elections/$electionId/details'
      fullPath: '/admin/dashboard/elections/$electionId/details'
      preLoaderRoute: typeof AdminDashboardDashboardElectionsElectionIdDetailsRouteImport
      parentRoute: typeof AdminDashboardRoute
    }
  }
}

interface AdminDashboardRouteChildren {
  AdminDashboardDashboardCreateElectionRoute: typeof AdminDashboardDashboardCreateElectionRoute
  AdminDashboardDashboardIndexRoute: typeof AdminDashboardDashboardIndexRoute
  AdminDashboardDashboardElectionsIndexRoute: typeof AdminDashboardDashboardElectionsIndexRoute
  AdminDashboardDashboardElectionsElectionIdDetailsRoute: typeof AdminDashboardDashboardElectionsElectionIdDetailsRoute
}

const AdminDashboardRouteChildren: AdminDashboardRouteChildren = {
  AdminDashboardDashboardCreateElectionRoute:
    AdminDashboardDashboardCreateElectionRoute,
  AdminDashboardDashboardIndexRoute: AdminDashboardDashboardIndexRoute,
  AdminDashboardDashboardElectionsIndexRoute:
    AdminDashboardDashboardElectionsIndexRoute,
  AdminDashboardDashboardElectionsElectionIdDetailsRoute:
    AdminDashboardDashboardElectionsElectionIdDetailsRoute,
}

const AdminDashboardRouteWithChildren = AdminDashboardRoute._addFileChildren(
  AdminDashboardRouteChildren,
)

interface AdminRouteChildren {
  AdminDashboardRoute: typeof AdminDashboardRouteWithChildren
  AdminLoginIndexRoute: typeof AdminLoginIndexRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminDashboardRoute: AdminDashboardRouteWithChildren,
  AdminLoginIndexRoute: AdminLoginIndexRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface ElectionIdResultsRouteChildren {
  ElectionIdResultsIndexRoute: typeof ElectionIdResultsIndexRoute
}

const ElectionIdResultsRouteChildren: ElectionIdResultsRouteChildren = {
  ElectionIdResultsIndexRoute: ElectionIdResultsIndexRoute,
}

const ElectionIdResultsRouteWithChildren =
  ElectionIdResultsRoute._addFileChildren(ElectionIdResultsRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  LoginIndexRoute: LoginIndexRoute,
  ElectionIdResultsRoute: ElectionIdResultsRouteWithChildren,
  ElectionIdIndexRoute: ElectionIdIndexRoute,
  ElectionIdVoteIndexRoute: ElectionIdVoteIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
